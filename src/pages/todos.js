import Head from "next/head";
import { Inter } from "next/font/google";
import { SignedIn, SignIn } from "@clerk/nextjs";
const inter = Inter({ subsets: ["latin"] });
import styles from "../styles/to-do.module.css";
import NavBar from "../templates/navbar";
import AddModal from "../templates/addmodal";
import EditModal from "../templates/editmodal";
import { useEffect, useState } from "react";

export default function Todos({ Component, pageProps }) {
  const [tasks, setTasks] = useState([]);
  const [loading, setLoading] = useState(true);
  const [openModal, setOpenModal] = useState(false);

  useEffect(() => {
    const fetchData = async () => {
      const response = await fetch(
        process.env.NEXT_PUBLIC_DB_API_ENDPOINT + "/toDo",
        {
          method: "GET",
          headers: { "x-apikey": process.env.NEXT_PUBLIC_DB_API_KEY },
        }
      );
      const data = await response.json();
      // update state -- configured earlier.
      setTasks(data);
      setLoading(false);
    };
    fetchData();
  }, []);

  if (loading) {
    return <div>Loading...</div>;
  } else {
    console.log(tasks);
    return (
      <>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <NavBar></NavBar>
        <div className={`${styles.maxheight} container-fluid text-center`}>
          <div className={`${styles.maxheight} row`}>
            <div className={`${styles.leftmenu} col`}>
              <h1>Categories</h1>
              {/* This is a template */}
              {tasks.map((task, key) => {
                console.log(key);
                return (
                  <>
                    <p>{task.category}</p>
                  </>
                );
              })}
            </div>
            <div className={`${styles.rightmenu} col-9`}>
              <h1>Tasks</h1>
              {/* This is a template */}
              {tasks.map((task) => {
                return (
                  <>
                    <div className="container">
                      <h2>{task.title}</h2>
                      <h3>Category: {task.category}</h3>
                      <p>{task.description}</p>
                      <input
                        type="checkbox"
                        id="vehicle1"
                        name="vehicle1"
                        value="Bike"
                      ></input>
                      <label htmlFor="vehicle1"> Check to complete</label>
                      <br></br>
                      <button
                        className={`btn btn-primary`}
                        type="button"
                        data-bs-toggle="modal"
                        data-bs-target={`#modal-${task._id}`}
                      >
                        Edit
                      </button>
                      <EditModal
                        parentTasks={tasks}
                        parentTask={task}
                      ></EditModal>
                    </div>
                    <hr></hr>
                  </>
                );
              })}
            </div>
            <button
              className={`${styles.addToDo} btn btn-primary`}
              type="button"
              data-bs-toggle="modal"
              data-bs-target="#addModal"
            >
              +
            </button>
            <AddModal parentTasks={tasks}></AddModal>
          </div>
        </div>
      </>
    );
  }
}
